name: Docker Build & Test

on:
  push:
    branches:
      - main
      - feat/GEON-1496-Oppsett-av-testmilj√∏
  pull_request:
    branches:
      - main

jobs:
  test-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Sjekker ut koden
        uses: actions/checkout@v4

      - name: Ekstraher milj√∏variabler fra GitHub Secrets
        run: |
          echo "${{ secrets.ENV }}" > .env
          cat .env | while IFS= read -r line; do
            echo "$line" >> $GITHUB_ENV
          done

      - name: Kopier milj√∏variabler til backend-container
        run: |
          docker create --name temp_container alpine
          docker cp .env temp_container:/app/.env
          docker rm temp_container

      - name: Installer WebSocket-klient (wscat)
        run: npm install -g wscat

      - name: List frontend files
        run: ls -l geonorge-app/

      - name: Bygger backend Docker-image
        run: docker build -t geogpt-backend -f geonorge-server/Dockerfile .

      - name: Bygger frontend Docker-image
        run: docker build -t geogpt-frontend -f geonorge-app/Dockerfile ./geonorge-app

      - name: Starter opp Docker Compose (test-milj√∏)
        run: |
          docker compose up -d
          echo "Venter p√• at databasen skal v√¶re klar..."
          for i in {1..10}; do
            docker exec pgvector_container pg_isready -U $DB_USER && break
            echo "Venter p√• database..."
            sleep 5
          done

      - name: Sjekk kj√∏rende containere
        run: docker ps -a

      - name: Sjekk backend-logger etter oppstart
        run: |
          echo "üü° Henter backend-logs..."
          docker logs $(docker ps --filter "name=geogpt-backend" -q) || echo "‚ùå Ingen backend-logs funnet!"

      - name: Sjekk om backend-container kj√∏rer
        run: |
          CONTAINER_ID=$(docker ps --filter "name=geogpt-backend" -q)
          if [ -z "$CONTAINER_ID" ]; then
            echo "‚ùå Backend-containeren kj√∏rer ikke!"
            exit 1
          else
            echo "‚úÖ Backend-container kj√∏rer med ID: $CONTAINER_ID"
          fi

      - name: Sjekk backend-containerens prosesser
        run: |
          echo "üü° Kj√∏rer kommando: docker top"
          docker top $(docker ps --filter "name=geogpt-backend" -q)

      - name: Sjekk backend-containerens filsystem
        run: |
          echo "üü° Sjekker backend-filer..."
          docker exec $(docker ps --filter "name=geogpt-backend" -q) ls -l /app/scripts

      - name: Sjekk backend-containerens milj√∏variabler
        run: docker exec $(docker ps --filter "name=geogpt-backend" -q) env

      - name: Test databaseforbindelse
        run: |
          export DB_USER=$(grep DB_USER .env | cut -d '=' -f2)
          export DB_NAME=$(grep DB_NAME .env | cut -d '=' -f2)
          export DB_PASSWORD=$(grep DB_PASSWORD .env | cut -d '=' -f2)
          docker exec -e PGPASSWORD=$DB_PASSWORD pgvector_container psql -h pgvector_container -U $DB_USER -d $DB_NAME -c "SELECT 1;"

      - name: Sjekk frontend-logger
        run: docker logs $(docker ps --filter "name=geogpt_frontend" -q)

      - name: Vent p√• at frontend skal starte
        run: |
          echo "Venter p√• at frontend-serveren skal starte..."
          for i in {1..10}; do
            curl --fail http://localhost:3000 && echo "Frontend er oppe!" && break
            echo "Frontend ikke klar enn√•..."
            sleep 5
          done || { echo "Frontend-server feilet!"; exit 1; }

      - name: Hent backend-loggfiler for debugging
        run: |
          echo "üîç Henter backend-loggfiler..."
          docker cp $(docker ps -a --filter "name=geogpt-backend" -q):/app/scripts/create_vector.log ./create_vector.log || echo "‚ùå Kunne ikke hente create_vector.log"
          docker cp $(docker ps -a --filter "name=geogpt-backend" -q):/app/scripts/insert_csv.log ./insert_csv.log || echo "‚ùå Kunne ikke hente insert_csv.log"
          docker cp $(docker ps -a --filter "name=geogpt-backend" -q):/app/scripts/server.log ./server.log || echo "‚ùå Kunne ikke hente server.log"

      - name: Vis backend-loggfiler
        run: |
          echo "üîç Innhold av create_vector.log:"
          cat create_vector.log || echo "‚ùå Ingen logg funnet!"
          echo "üîç Innhold av insert_csv.log:"
          cat insert_csv.log || echo "‚ùå Ingen logg funnet!"
          echo "üîç Innhold av server.log:"
          cat server.log || echo "‚ùå Ingen logg funnet!"

      - name: Stopper og rydder opp
        run: docker compose down
