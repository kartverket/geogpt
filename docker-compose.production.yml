services:
  database:
    image: pgvector/pgvector:pg16
    container_name: pgvector_container
    environment:
      POSTGRES_USER: asd
      POSTGRES_PASSWORD: asd
      POSTGRES_DB: asd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "asd"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - geogpt_network

  backend:
    build:
      context: .
      dockerfile: geonorge-server/Dockerfile
    volumes:
      - .:/app
      - ./cleaned_metadata.csv:/app/../cleaned_metadata.csv
    working_dir: /app/geonorge-server
    dns:
      - 8.8.8.8
      - 1.1.1.1
    extra_hosts:
      - "kartai-openai.openai.azure.com:51.12.73.214"
      - "swedencentral.api.cognitive.microsoft.com:51.12.73.214"
      - "kartai-openai.azure.com:51.12.73.214"
    command: >
      sh -c "
        echo 'Testing network...' &&
        echo '51.12.73.214 kartai-openai.openai.azure.com' >> /etc/hosts &&
        echo '51.12.73.214 kartai-openai.azure.com' >> /etc/hosts &&
        cat /etc/hosts &&
        cd /app &&
        python scripts/insert_csv.py &&
        python geonorge-server/src/server.py
      "
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=asd
      - DB_USER=asd
      - DB_PASSWORD=asd
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_GPT_API_KEY=${AZURE_GPT_API_KEY}
      - AZURE_GPT_ENDPOINT=${AZURE_GPT_ENDPOINT}
      - AZURE_EMBEDDING_API_KEY=${AZURE_EMBEDDING_API_KEY}
      - AZURE_EMBEDDING_ENDPOINT=https://kartai-openai.openai.azure.com/openai/deployments/text-embedding-3-large/embeddings?api-version=2023-05-15
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      # Standard HTTP routing
      - "traefik.http.routers.geogpt-backend.rule=PathPrefix(`/geogpt/`)"
      - "traefik.http.routers.geogpt-backend.entrypoints=web"
      - "traefik.http.services.geogpt-backend.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.geogpt-strip-prefix.stripprefix.prefixes=/geogpt"
      - "traefik.http.middlewares.geogpt-auth.basicauth.users=gjest:$$2y$$05$$j4tPsOiWSd6Snc9SyNEFk.wZPMnco00h5X0X5Qki33LiTm6Qt9P22"

      # WebSocket specific routing - separate router for WebSockets
      - "traefik.http.routers.geogpt-ws.rule=PathPrefix(`/geogpt/`) && Headers(`Connection`, `Upgrade`)"
      - "traefik.http.routers.geogpt-ws.entrypoints=web"
      - "traefik.http.routers.geogpt-ws.service=geogpt-backend"
      - "traefik.http.routers.geogpt-ws.middlewares=geogpt-strip-prefix,geogpt-auth"

      # Proper WebSocket headers handling
      - "traefik.http.middlewares.geogpt-websocket.headers.customrequestheaders.Connection=Upgrade"
      - "traefik.http.middlewares.geogpt-websocket.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Allow-Methods=GET, OPTIONS, PUT"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Allow-Headers=Authorization, Origin, X-Requested-With, Content-Type, Accept, Cache-Control"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Allow-Credentials=true"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Expose-Headers=Content-Length, Content-Type"
      - "traefik.http.middlewares.sameorigin.headers.customResponseHeaders.Access-Control-Max-Age=3600"

      # Proper Options handling
      - "traefik.http.middlewares.options-passthrough.headers.customResponseHeaders.Access-Control-Max-Age=3600"
      - "traefik.http.routers.options-route.rule=Method(`OPTIONS`)"
      - "traefik.http.routers.options-route.middlewares=options-passthrough"
      - "traefik.http.routers.options-route.service=geogpt-backend"

      # Add websocket middleware to both routers
      - "traefik.http.routers.geogpt-backend.middlewares=geogpt-strip-prefix,geogpt-websocket,sameorigin"
      - "traefik.http.routers.geogpt-ws.middlewares=geogpt-strip-prefix,geogpt-websocket,sameorigin"
    networks:
      - geogpt_network

  frontend:
    build:
      context: ./geonorge-app
      dockerfile: Dockerfile
    container_name: geogpt_frontend
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.geogpt-frontend.rule=Host(`geogpt.geokrs.no`)"
      - "traefik.http.routers.geogpt-frontend.entrypoints=web"
      - "traefik.http.services.geogpt-frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.geogpt-frontend.middlewares=geogpt-auth"
      - "traefik.http.middlewares.geogpt-auth.basicauth.users=gjest:$$2y$$05$$j4tPsOiWSd6Snc9SyNEFk.wZPMnco00h5X0X5Qki33LiTm6Qt9P22"
    networks:
      - geogpt_network

networks:
  geogpt_network:
    external: true
